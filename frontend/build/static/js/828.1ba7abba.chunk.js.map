{"version":3,"file":"static/js/828.1ba7abba.chunk.js","mappings":"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","sources":["pages/shop_1.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { useCart } from '../contexts/CartContext';\r\nimport { FaShoppingCart, FaStar, FaRegStar, FaHeart, FaRegHeart, FaPlus, FaMinus } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../styles/shop_1.css';\r\n\r\nconst ShopPage = () => {\r\n  const [shopData, setShopData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [quantity, setQuantity] = useState({});\r\n  const [favorites, setFavorites] = useState({});\r\n  const { shopId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { addToCart } = useCart();\r\n  \r\n  // Initialize quantity state for each plant\r\n  useEffect(() => {\r\n    if (shopData?.plants) {\r\n      const initialQuantities = {};\r\n      shopData.plants.forEach(plant => {\r\n        initialQuantities[plant._id] = 1;\r\n      });\r\n      setQuantity(initialQuantities);\r\n    }\r\n  }, [shopData]);\r\n  \r\n  // Load favorites from localStorage\r\n  useEffect(() => {\r\n    const savedFavorites = localStorage.getItem('favorites');\r\n    if (savedFavorites) {\r\n      setFavorites(JSON.parse(savedFavorites));\r\n    }\r\n  }, []);\r\n  \r\n  // Toggle favorite status\r\n  const toggleFavorite = (plantId) => {\r\n    const newFavorites = { ...favorites, [plantId]: !favorites[plantId] };\r\n    setFavorites(newFavorites);\r\n    localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n  };\r\n  \r\n  // Handle quantity changes\r\n  const handleQuantityChange = (plantId, newQuantity) => {\r\n    const num = parseInt(newQuantity, 10);\r\n    if (!isNaN(num) && num >= 1) {\r\n      setQuantity(prev => ({\r\n        ...prev,\r\n        [plantId]: num\r\n      }));\r\n    }\r\n  };\r\n  \r\n  // Add item to cart\r\n  const handleAddToCart = (plant) => {\r\n    addToCart({\r\n      id: plant._id,\r\n      name: plant.name,\r\n      price: plant.price,\r\n      image: plant.image,\r\n      shopId: shopData._id,\r\n      shopName: shopData.shopName\r\n    }, quantity[plant._id] || 1);\r\n    \r\n    toast.success(`${quantity[plant._id] || 1} ${plant.name} added to cart!`, {\r\n      position: 'bottom-right',\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchShopData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/shops/${shopId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch shop data');\r\n        }\r\n        const data = await response.json();\r\n        setShopData(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (shopId) {\r\n      fetchShopData();\r\n    }\r\n  }, [shopId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"spinner\"></div>\r\n        <p>Loading shop details...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <div className=\"error-icon\">⚠️</div>\r\n        <h3>Error Loading Shop</h3>\r\n        <p>{error}</p>\r\n        <button className=\"btn green\" onClick={() => window.location.reload()}>\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!shopData) {\r\n    return (\r\n      <div className=\"not-found\">\r\n        <h3>Shop Not Found</h3>\r\n        <p>The shop you're looking for doesn't exist or has been removed.</p>\r\n        <Link to=\"/shop\" className=\"btn green\">\r\n          Browse Other Shops\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <div className=\"logo\">\r\n          <Link to=\"/\">\r\n            <strong>VirtualGreen</strong>\r\n          </Link>\r\n        </div>\r\n        <nav>\r\n          <Link to=\"/user-dashboard\">Home</Link>\r\n          <Link to=\"/virtual-tour\">Virtual Tour</Link>\r\n          <Link to=\"/3d-viewer\">3D Viewer</Link>\r\n          <Link to=\"/shop\" className=\"active\">Shop</Link>\r\n        </nav>\r\n        <div className=\"header-actions\">\r\n          <Link to=\"/cart\" className=\"cart-icon\">\r\n            <FaShoppingCart />\r\n            <span className=\"cart-count\">0</span>\r\n          </Link>\r\n          <button className=\"btn green\" onClick={() => navigate('/login')}>\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"hero\">\r\n        <div className=\"hero-image\" style={{ backgroundImage: `url(${shopData.bannerImage || '/images/greenhouse.jpg'})` }}></div>\r\n        <div className=\"hero-overlay\">\r\n          <div className=\"shop-rating\">\r\n            {[...Array(5)].map((_, i) => (\r\n              i < Math.floor(shopData.rating || 0) ? \r\n                <FaStar key={i} className=\"star filled\" /> : \r\n                <FaRegStar key={i} className=\"star\" />\r\n            ))}\r\n            <span>({shopData.reviewCount || 0} reviews)</span>\r\n          </div>\r\n          <h1>{shopData.shopName}</h1>\r\n          <p className=\"shop-description\">{shopData.description}</p>\r\n          <div className=\"shop-meta\">\r\n            {shopData.tags?.map((tag, index) => (\r\n              <span key={index} className=\"tag\">{tag}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"shop-info\">\r\n        <div className=\"info-card\">\r\n          <h3>Shop Information</h3>\r\n          <p><strong>Address:</strong> {shopData.address}</p>\r\n          <p><strong>Phone:</strong> {shopData.phone}</p>\r\n          <p><strong>Email:</strong> {shopData.email}</p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"plant-section\">\r\n        <h2 className=\"section-title\">Available Plants</h2>\r\n        <div className=\"plant-grid\">\r\n          {shopData.plants && shopData.plants.length > 0 ? (\r\n            shopData.plants.map((plant) => (\r\n              <div key={plant._id} className=\"plant-card\">\r\n                <div className=\"plant-image\">\r\n                  <img \r\n                    src={plant.image || '/images/plant-placeholder.jpg'} \r\n                    alt={plant.name} \r\n                    onError={(e) => {\r\n                      e.target.onerror = null;\r\n                      e.target.src = '/images/plant-placeholder.jpg';\r\n                    }}\r\n                  />\r\n                  <button \r\n                    className={`favorite-btn ${favorites[plant._id] ? 'active' : ''}`}\r\n                    onClick={() => toggleFavorite(plant._id)}\r\n                    aria-label={favorites[plant._id] ? 'Remove from favorites' : 'Add to favorites'}\r\n                  >\r\n                    {favorites[plant._id] ? <FaHeart /> : <FaRegHeart />}\r\n                  </button>\r\n                </div>\r\n                <div className=\"plant-info\">\r\n                  <h3>{plant.name}</h3>\r\n                  <p className=\"plant-description\">{plant.description}</p>\r\n                  <div className=\"plant-price\">\r\n                    <span className=\"price\">${plant.price.toFixed(2)}</span>\r\n                    {plant.originalPrice && (\r\n                      <span className=\"original-price\">${plant.originalPrice.toFixed(2)}</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"quantity-selector\">\r\n                    <button \r\n                      className=\"quantity-btn\" \r\n                      onClick={() => handleQuantityChange(plant._id, (quantity[plant._id] || 1) - 1)}\r\n                      disabled={(quantity[plant._id] || 1) <= 1}\r\n                    >\r\n                      <FaMinus />\r\n                    </button>\r\n                    <input \r\n                      type=\"number\" \r\n                      min=\"1\" \r\n                      value={quantity[plant._id] || 1} \r\n                      onChange={(e) => handleQuantityChange(plant._id, e.target.value)}\r\n                      className=\"quantity-input\"\r\n                    />\r\n                    <button \r\n                      className=\"quantity-btn\"\r\n                      onClick={() => handleQuantityChange(plant._id, (quantity[plant._id] || 1) + 1)}\r\n                    >\r\n                      <FaPlus />\r\n                    </button>\r\n                  </div>\r\n                  <button \r\n                    className=\"add-to-cart-btn\"\r\n                    onClick={() => handleAddToCart(plant)}\r\n                  >\r\n                    <FaShoppingCart /> Add to Cart\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"no-plants\">\r\n              <p>No plants available at the moment. Please check back later.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      {shopData.featuredPlants && shopData.featuredPlants.length > 0 && (\r\n        <section className=\"featured\">\r\n          <h2 className=\"section-title\">Featured Plants</h2>\r\n          <div className=\"featured-cards\">\r\n            {shopData.featuredPlants.map((plant, index) => (\r\n              <PlantCard\r\n                key={index}\r\n                plant={plant}\r\n                onAddToCart={handleAddToCart}\r\n                isFavorite={!!favorites[plant._id]}\r\n                onToggleFavorite={() => toggleFavorite(plant._id)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      <section className=\"cta\">\r\n        <h2>Ready to Explore More?</h2>\r\n        <button className=\"btn green\" onClick={() => navigate('/virtual-tour')}>Continue 3D Tour</button>\r\n        <button className=\"btn orange\" onClick={() => navigate('/shop')}>Shop Now</button>\r\n      </section>\r\n\r\n      <footer>\r\n        <div>\r\n          <h4>VirtualGreen</h4>\r\n          <p>Shaping the future of plant care</p>\r\n        </div>\r\n        <div>\r\n          <h4>Quick Links</h4>\r\n          <p>FAQ<br />Privacy Policy<br />Terms of Use</p>\r\n        </div>\r\n        <div>\r\n          <h4>Support</h4>\r\n          <p>Contact Us<br />Help Center</p>\r\n        </div>\r\n        <div>\r\n          <h4>Follow Us</h4>\r\n          <p>Instagram | Facebook | Twitter</p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PlantCard = ({ plant, onAddToCart, isFavorite, onToggleFavorite }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  \r\n  const handleQuantityChange = (newQuantity) => {\r\n    const num = parseInt(newQuantity, 10);\r\n    if (!isNaN(num) && num >= 1) {\r\n      setQuantity(num);\r\n    }\r\n  };\r\n  \r\n  const handleAddToCartClick = (e) => {\r\n    e.stopPropagation();\r\n    onAddToCart(plant, quantity);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"featured-plant-card\">\r\n      <div className=\"featured-plant-image\">\r\n        <img \r\n          src={plant.image || '/images/plant-placeholder.jpg'} \r\n          alt={plant.name}\r\n          onError={(e) => {\r\n            e.target.onerror = null;\r\n            e.target.src = '/images/plant-placeholder.jpg';\r\n          }}\r\n        />\r\n        <button \r\n          className={`favorite-btn ${isFavorite ? 'active' : ''}`}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            onToggleFavorite();\r\n          }}\r\n          aria-label={isFavorite ? 'Remove from favorites' : 'Add to favorites'}\r\n        >\r\n          {isFavorite ? <FaHeart /> : <FaRegHeart />}\r\n        </button>\r\n      </div>\r\n      <div className=\"featured-plant-info\">\r\n        <h3>{plant.name}</h3>\r\n        <p className=\"plant-desc\">{plant.description}</p>\r\n        <div className=\"plant-price\">\r\n          <span className=\"price\">${plant.price.toFixed(2)}</span>\r\n          {plant.originalPrice && (\r\n            <span className=\"original-price\">${plant.originalPrice.toFixed(2)}</span>\r\n          )}\r\n        </div>\r\n        <div className=\"quantity-selector\">\r\n          <button \r\n            className=\"quantity-btn\" \r\n            onClick={() => handleQuantityChange(quantity - 1)}\r\n            disabled={quantity <= 1}\r\n          >\r\n            <FaMinus />\r\n          </button>\r\n          <input \r\n            type=\"number\" \r\n            min=\"1\" \r\n            value={quantity} \r\n            onChange={(e) => handleQuantityChange(e.target.value)}\r\n            className=\"quantity-input\"\r\n          />\r\n          <button \r\n            className=\"quantity-btn\"\r\n            onClick={() => handleQuantityChange(quantity + 1)}\r\n          >\r\n            <FaPlus />\r\n          </button>\r\n        </div>\r\n        <button \r\n          className=\"add-to-cart-btn\"\r\n          onClick={handleAddToCartClick}\r\n        >\r\n          <FaShoppingCart /> Add to Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n"],"names":["PlantCard","_ref","plant","onAddToCart","isFavorite","onToggleFavorite","quantity","setQuantity","useState","handleQuantityChange","newQuantity","num","parseInt","isNaN","_jsxs","className","children","_jsx","src","image","alt","name","onError","e","target","onerror","onClick","stopPropagation","FaHeart","FaRegHeart","description","price","toFixed","originalPrice","disabled","FaMinus","type","min","value","onChange","FaPlus","FaShoppingCart","ShopPage","_shopData$tags","shopData","setShopData","loading","setLoading","error","setError","favorites","setFavorites","shopId","useParams","navigate","useNavigate","addToCart","useCart","useEffect","plants","initialQuantities","forEach","_id","savedFavorites","localStorage","getItem","JSON","parse","toggleFavorite","plantId","newFavorites","setItem","stringify","prev","handleAddToCart","id","shopName","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","async","response","fetch","ok","Error","data","json","err","message","fetchShopData","window","location","reload","Link","to","style","backgroundImage","bannerImage","Array","map","_","i","Math","floor","rating","FaStar","FaRegStar","reviewCount","tags","tag","index","address","phone","email","length","featuredPlants"],"sourceRoot":""}