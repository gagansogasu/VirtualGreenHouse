{"version":3,"file":"static/js/559.c8a2e956.chunk.js","mappings":"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","sources":["pages/UserDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { userAPI } from '../services/api';\nimport '../styles/UserDashboard.css';\n\n// Constants\nconst SLIDE_INTERVAL = 10000;\nconst DRAG_THRESHOLD = 50;\n\nconst UserDashboard = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [userData, setUserData] = useState(null);\n  const [shops, setShops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const slideIntervalRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const startPosRef = useRef(0);\n  // Removed useNavigate as navigation is now handled by ProtectedRoute\n  // const navigate = useNavigate();\n\n  // Memoized slides data\n  const slides = useMemo(() => [\n    {\n      image: '/assets/dashboard_1.jpg',\n      title: 'Welcome to VirtualGreen',\n      description: 'Your ultimate destination for beautiful indoor and outdoor plants',\n      buttonText: 'Shop Now',\n      link: '/shops'\n    },\n    {\n      image: '/assets/dashboard_2.jpg',\n      title: 'Explore Exotic Plant Collections',\n      description: 'Discover rare and unique plants from around the world',\n      buttonText: 'Explore Collections',\n      link: '/plants'\n    },\n    {\n      image: '/assets/dashboard_3.jpg',\n      title: 'Sustainable Gardening',\n      description: 'All our plants are grown using eco-friendly practices',\n      buttonText: 'Learn More',\n      link: '/about'\n    }\n  ], []);\n\n  // Memoized plant categories\n  const plantCategories = useMemo(() => [\n    {\n      name: 'Indoor Plants',\n      description: 'Perfect plants for improving air quality and adding life to your home.',\n      count: 45,\n      image: '/assets/indoor-plants.jpg',\n      link: '/plants/indoor'\n    },\n    {\n      name: 'Succulents & Cacti',\n      description: 'Low-maintenance plants perfect for beginners and busy people.',\n      count: 38,\n      image: '/assets/succulents.jpg',\n      link: '/plants/succulents'\n    },\n    {\n      name: 'Flowering Plants',\n      description: 'Colorful blooms to brighten up any space in your home or garden.',\n      count: 27,\n      image: '/assets/flowering.jpg',\n      link: '/plants/flowering'\n    }\n  ], []);\n\n  // Fetch user data and shops\n  const fetchData = useCallback(async () => {\n    try {\n      setError(null);\n      // Fetch user profile\n      const userResponse = await userAPI.getProfile();\n      setUserData(userResponse.data);\n\n      // Use hardcoded shops data for now\n      const featuredShops = [\n        {\n          _id: '1',\n          shopName: 'Nandanam Nursery',\n          description: 'One of the oldest and most trusted nurseries in Chennai, offering a wide variety of plants, seeds, and gardening accessories.',\n          address: 'No. 12, Venkatesa Agraharam, Mylapore, Chennai, Tamil Nadu 600004',\n          phone: '+91 44 2434 4455',\n          image: 'https://images.unsplash.com/photo-1600585154340-be6161a56a0c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1770&q=80'\n        },\n        {\n          _id: '2',\n          shopName: 'The Nurserymen Co-operative Society Ltd',\n          description: 'A cooperative society of nurserymen providing quality plants, gardening tools, and expert advice to gardening enthusiasts.',\n          address: 'No. 1, 3rd Main Road, CIT Colony, Mylapore, Chennai, Tamil Nadu 600004',\n          phone: '+91 44 2819 0417',\n          image: 'https://images.unsplash.com/photo-1600607687939-ce8a6c25118c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1753&q=80'\n        }\n      ];\n      \n      setShops(featuredShops);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError(error.message);\n      // Handle 401 by ProtectedRoute, no need to navigate here\n      // if (error.response?.status === 401) {\n      //   localStorage.removeItem('token');\n      //   localStorage.removeItem('user');\n      //   localStorage.removeItem('userType');\n      //   navigate('/login');\n      // }\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Removed navigate from dependencies\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Moved logout to a separate handler or context if needed globally\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('userType');\n    window.location.href = '/login'; // Use direct assignment or context for global logout\n  }, []);\n\n  // Slideshow controls\n  const startSlideShow = useCallback(() => {\n    slideIntervalRef.current = setInterval(() => {\n      setCurrentSlide(prev => (prev + 1) % slides.length);\n    }, SLIDE_INTERVAL);\n  }, [slides.length]);\n\n  const resetTimer = useCallback(() => {\n    clearInterval(slideIntervalRef.current);\n    startSlideShow();\n  }, [startSlideShow]);\n\n  const changeSlide = useCallback((n) => {\n    setCurrentSlide(n);\n    resetTimer();\n  }, [resetTimer]);\n\n  // Mouse event handlers\n  const handleMouseDown = useCallback((e) => {\n    isDraggingRef.current = true;\n    startPosRef.current = e.clientX;\n    clearInterval(slideIntervalRef.current);\n  }, []);\n\n  const handleMouseMove = useCallback((e) => {\n    if (!isDraggingRef.current) return;\n    const currentPosition = e.clientX;\n    const diff = currentPosition - startPosRef.current;\n\n    if (Math.abs(diff) > DRAG_THRESHOLD) {\n      if (diff > 0) {\n        changeSlide((currentSlide - 1 + slides.length) % slides.length);\n      } else {\n        changeSlide((currentSlide + 1) % slides.length);\n      }\n      isDraggingRef.current = false;\n    }\n  }, [changeSlide, currentSlide, slides.length]);\n\n  const handleMouseUp = useCallback(() => {\n    isDraggingRef.current = false;\n    resetTimer();\n  }, [resetTimer]);\n\n  const handleMouseLeave = useCallback(() => {\n    if (isDraggingRef.current) {\n      isDraggingRef.current = false;\n      resetTimer();\n    }\n  }, [resetTimer]);\n\n  // Start and cleanup slideshow effect\n  useEffect(() => {\n    startSlideShow();\n    return () => clearInterval(slideIntervalRef.current);\n  }, [startSlideShow]);\n\n  if (loading) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner\"></div>\n        <p>Loading dashboard...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <h2>Error Loading Dashboard</h2>\n        <p>{error}</p>\n        <button onClick={fetchData} className=\"retry-button\">\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"user-dashboard\">\n      <header>\n        <nav className=\"navbar\">\n          <Link to=\"/\" className=\"logo\">&#127807; VirtualGreen</Link>\n          <ul className=\"nav-links\">\n            <li><Link to=\"/user-dashboard\" className=\"active\">Home</Link></li>\n            <li><Link to=\"/shops\">Shops</Link></li>\n          </ul>\n          <div className=\"nav-buttons\">\n            <div className=\"user-menu\">\n              <Link to=\"/profile\" className=\"profile-link\">\n                <span className=\"user-avatar\">\n                  {userData?.name?.charAt(0) || 'U'}\n                </span>\n                <span className=\"user-name\">{userData?.name || 'User'}</span>\n              </Link>\n              <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n            </div>\n          </div>\n        </nav>\n      </header>\n\n      <div\n        className=\"slider-container\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n      >\n        {slides.map((slide, index) => (\n          <div\n            key={index}\n            className={`slide ${index === currentSlide ? 'active' : ''}`}\n            style={{ backgroundImage: `url(${slide.image})` }}\n          >\n            <div className=\"slider-overlay\">\n              <h1>{slide.title}</h1>\n              <p>{slide.description}</p>\n              <Link to={slide.link} className=\"shop-btn\">{slide.buttonText}</Link>\n            </div>\n          </div>\n        ))}\n\n        <div className=\"slider-nav\">\n          {slides.map((_, index) => (\n            <button\n              key={index}\n              className={`slider-dot ${index === currentSlide ? 'active' : ''}`}\n              onClick={() => changeSlide(index)}\n              aria-label={`Go to slide ${index + 1}`}\n            />\n          ))}\n        </div>\n\n        <div className=\"slider-arrows\">\n          <button\n            className=\"slider-arrow prev\"\n            onClick={() => changeSlide((currentSlide - 1 + slides.length) % slides.length)}\n            aria-label=\"Previous slide\"\n          >\n            &#10094;\n          </button>\n          <button\n            className=\"slider-arrow next\"\n            onClick={() => changeSlide((currentSlide + 1) % slides.length)}\n            aria-label=\"Next slide\"\n          >\n            &#10095;\n          </button>\n        </div>\n      </div>\n\n      <section className=\"featured-shops\">\n        <h2>Featured Nurseries</h2>\n        <div className=\"shops-grid\">\n          {shops.map((shop) => (\n            <div key={shop._id} className=\"shop-card\">\n              <div className=\"shop-image\">\n                <img src={shop.image} alt={shop.shopName} loading=\"lazy\" />\n              </div>\n              <div className=\"shop-info\">\n                <h3>{shop.shopName}</h3>\n                <p className=\"shop-description\">{shop.description}</p>\n                <div className=\"shop-details\">\n                  <p className=\"shop-address\">{shop.address}</p>\n                  <p className=\"shop-phone\">Phone: {shop.phone}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default UserDashboard;"],"names":["UserDashboard","_userData$name","currentSlide","setCurrentSlide","useState","userData","setUserData","shops","setShops","loading","setLoading","error","setError","slideIntervalRef","useRef","isDraggingRef","startPosRef","slides","useMemo","image","title","description","buttonText","link","fetchData","name","count","useCallback","async","userResponse","userAPI","getProfile","data","_id","shopName","address","phone","console","message","useEffect","handleLogout","localStorage","removeItem","window","location","href","startSlideShow","current","setInterval","prev","length","resetTimer","clearInterval","changeSlide","n","handleMouseDown","e","clientX","handleMouseMove","diff","Math","abs","handleMouseUp","handleMouseLeave","_jsxs","className","children","_jsx","onClick","Link","to","charAt","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","map","slide","index","style","backgroundImage","_","shop","src","alt"],"sourceRoot":""}