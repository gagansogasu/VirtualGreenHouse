{"version":3,"file":"static/js/155.6917bee1.chunk.js","mappings":"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","sources":["pages/Checkout.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { cartAPI, orderAPI } from '../services/api';\nimport '../styles/Checkout.css';\n\nconst Checkout = () => {\n  const [cart, setCart] = useState({ items: [], totalAmount: 0 });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [orderPlaced, setOrderPlaced] = useState(false);\n  const [orderId, setOrderId] = useState(null);\n  const [formData, setFormData] = useState({\n    shippingAddress: '',\n    paymentMethod: 'Credit Card'\n  });\n  const navigate = useNavigate();\n\n  // Fetch cart data\n  const fetchCart = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null); // Clear previous errors\n      const response = await cartAPI.getCart();\n      setCart(response.data);\n\n      // Pre-fill shipping address from user data if available\n      const userData = JSON.parse(localStorage.getItem('user') || '{}');\n      if (userData.address) {\n        setFormData(prev => ({\n          ...prev,\n          shippingAddress: userData.address\n        }));\n      }\n\n    } catch (err) {\n      console.error('Error fetching cart:', err);\n      // ProtectedRoute handles 401, so no need to navigate here\n      // if (err.response?.status === 401) {\n      //   navigate('/login');\n      // } else {\n      setError('Failed to load your cart. Please try again.');\n      // }\n    } finally {\n      setLoading(false);\n    }\n  }, []); // No dependencies as navigate is not used for auth check\n\n  useEffect(() => {\n    fetchCart();\n  }, [fetchCart]);\n\n  // Handle input change\n  const handleInputChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n\n    if (!formData.shippingAddress.trim()) {\n      setError('Please enter a shipping address.');\n      return;\n    }\n\n    if (!formData.paymentMethod) {\n      setError('Please select a payment method.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null); // Clear previous errors\n      const response = await orderAPI.createOrder(formData);\n      setOrderId(response.data._id);\n      setOrderPlaced(true);\n      setCart({ items: [], totalAmount: 0 }); // Clear cart after placing order\n      // Optionally clear cart on backend here as well if needed\n\n    } catch (err) {\n      console.error('Error placing order:', err);\n      setError(err.response?.data?.message || 'Failed to place order. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [formData]); // Depend on formData\n\n  // Memoized cart items rendering\n  const renderCartItems = useMemo(() => {\n    return cart.items.length === 0 ? (\n      <p className=\"empty-cart-message\">Your cart is empty</p>\n    ) : (\n      <>\n        <div className=\"summary-items\">\n          {cart.items.map((item) => (\n            <div key={item._id} className=\"summary-item\">\n              <div className=\"item-image\">\n                <img\n                  src={item.plant?.imageUrl || '/assets/plant-placeholder.jpg'}\n                  alt={item.plant?.name}\n                  loading=\"lazy\"\n                />\n              </div>\n              <div className=\"item-details\">\n                <h3>{item.plant?.name}</h3>\n                <p>Quantity: {item.quantity}</p>\n                <p className=\"item-price\">â‚¹{(item.price * item.quantity).toFixed(2)}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"price-summary\">\n          <div className=\"summary-row\">\n            <span>Subtotal</span>\n            <span>${cart.totalAmount.toFixed(2)}</span>\n          </div>\n          <div className=\"summary-row\">\n            <span>Shipping</span>\n            <span>Free</span> {/* Assuming free shipping for now */}\n          </div>\n          <div className=\"summary-row total\">\n            <span>Total</span>\n            <span>${cart.totalAmount.toFixed(2)}</span>\n          </div>\n        </div>\n      </>\n    );\n  }, [cart.items, cart.totalAmount]); // Depend on cart data\n\n  // Render order success\n  const renderOrderSuccess = () => (\n    <div className=\"order-success\">\n      <div className=\"success-icon\">âœ“</div>\n      <h2>Order Placed Successfully!</h2>\n      <p>Your order has been placed successfully. Thank you for shopping with us!</p>\n      {orderId && <p className=\"order-id\">Order ID: {orderId}</p>}\n      <div className=\"success-buttons\">\n        <button onClick={() => navigate('/user-dashboard')} className=\"home-btn\">\n          Return to Home\n        </button>\n        <button onClick={() => navigate('/orders')} className=\"view-orders-btn\">\n          View My Orders\n        </button>\n      </div>\n    </div>\n  );\n\n  // Render checkout form\n  const renderCheckoutForm = () => (\n    <div className=\"checkout-content\">\n      <div className=\"checkout-summary\">\n        <h2>Order Summary</h2>\n        {renderCartItems}\n      </div>\n\n      <div className=\"checkout-form-container\">\n        <h2>Shipping & Payment</h2>\n        <form onSubmit={handleSubmit} className=\"checkout-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"shippingAddress\">Shipping Address</label>\n            <textarea\n              id=\"shippingAddress\"\n              name=\"shippingAddress\"\n              value={formData.shippingAddress}\n              onChange={handleInputChange}\n              placeholder=\"Enter your full shipping address\"\n              required\n              rows=\"4\"\n            />\n            {error && formData.shippingAddress.trim() === '' && <p className=\"error-message\">{error}</p>}\n          </div>\n\n          <div className=\"form-group\">\n            <label>Payment Method</label>\n            <div className=\"payment-methods\">\n              <div className=\"payment-method\">\n                <input\n                  type=\"radio\"\n                  id=\"creditCard\"\n                  name=\"paymentMethod\"\n                  value=\"Credit Card\"\n                  checked={formData.paymentMethod === 'Credit Card'}\n                  onChange={handleInputChange}\n                />\n                <label htmlFor=\"creditCard\">Credit Card</label>\n              </div>\n\n              <div className=\"payment-method\">\n                <input\n                  type=\"radio\"\n                  id=\"paypal\"\n                  name=\"paymentMethod\"\n                  value=\"PayPal\"\n                  checked={formData.paymentMethod === 'PayPal'}\n                  onChange={handleInputChange}\n                />\n                <label htmlFor=\"paypal\">PayPal</label>\n              </div>\n\n              <div className=\"payment-method\">\n                <input\n                  type=\"radio\"\n                  id=\"cod\"\n                  name=\"paymentMethod\"\n                  value=\"Cash On Delivery\"\n                  checked={formData.paymentMethod === 'Cash On Delivery'}\n                  onChange={handleInputChange}\n                />\n                <label htmlFor=\"cod\">Cash On Delivery</label>\n              </div>\n            </div>\n            {error && !formData.paymentMethod && <p className=\"error-message\">{error}</p>}\n          </div>\n\n          <div className=\"checkout-actions\">\n            <Link to=\"/cart\" className=\"back-to-cart\">\n              Back to Cart\n            </Link>\n            <button\n              type=\"submit\"\n              className=\"place-order-btn\"\n              disabled={loading || cart.items.length === 0 || !formData.shippingAddress.trim() || !formData.paymentMethod}\n            >\n              {loading ? 'Processing...' : 'Place Order'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"checkout-page\">\n      <header className=\"checkout-header\">\n        {/* Consider adding actual site logo/nav here */}\n        <Link to=\"/user-dashboard\" className=\"logo\">VirtualGreen</Link>\n        <nav className=\"checkout-nav\">\n          <Link to=\"/user-dashboard\">Home</Link>\n          <Link to=\"/shops\">Shops</Link>\n          <Link to=\"/cart\">Cart</Link>\n        </nav>\n      </header>\n\n      <div className=\"checkout-container\">\n        <h1>{orderPlaced ? 'Order Confirmation' : 'Checkout'}</h1>\n\n        {/* Use loading spinner component */}\n        {loading && !orderPlaced && (\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n            <p>Loading checkout...</p>\n          </div>\n        )}\n\n        {/* Display general errors, specific form errors handled inline */}\n        {error && !(!formData.shippingAddress.trim() || !formData.paymentMethod) && (\n          <div className=\"error-message general\">{error}</div>\n        )}\n\n        {!loading && orderPlaced && renderOrderSuccess()}\n\n        {!loading && !orderPlaced && renderCheckoutForm()}\n\n        {/* Handle empty cart state when not loading and not order placed */}\n        {!loading && !orderPlaced && cart.items.length === 0 && (\n          <div className=\"empty-cart-container\">\n            <h2>Your Cart is Empty</h2>\n            <p>Looks like you haven't added anything to your cart yet.</p>\n            <Link to=\"/shops\" className=\"shop-now-link\">Shop Now</Link>\n          </div>\n        )}\n\n      </div>\n\n      <footer className=\"checkout-footer\">\n        {/* Footer content - consider creating a reusable Footer component */}\n        <div className=\"footer-content\">\n          <div className=\"footer-section\">\n            <h3>About Us</h3>\n            <p>VirtualGreen is your online destination for plants.</p>\n          </div>\n          <div className=\"footer-section\">\n            <h3>Contact</h3>\n            <p>Email: info@virtualgreen.com</p>\n            <p>Phone: (123) 456-7890</p>\n          </div>\n          <div className=\"footer-section\">\n            <h3>Follow Us</h3>\n            {/* Add social media links */}\n          </div>\n        </div>\n        <p className=\"footer-bottom-text\">Â© 2023 VirtualGreen. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Checkout;\n\n"],"names":["Checkout","cart","setCart","useState","items","totalAmount","loading","setLoading","error","setError","orderPlaced","setOrderPlaced","orderId","setOrderId","formData","setFormData","shippingAddress","paymentMethod","navigate","useNavigate","fetchCart","useCallback","async","response","cartAPI","getCart","data","userData","JSON","parse","localStorage","getItem","address","prev","err","console","useEffect","handleInputChange","e","name","value","target","handleSubmit","preventDefault","trim","orderAPI","createOrder","_id","_err$response","_err$response$data","message","renderCartItems","useMemo","length","_jsx","className","children","_jsxs","_Fragment","map","item","_item$plant","_item$plant2","_item$plant3","src","plant","imageUrl","alt","quantity","price","toFixed","Link","to","onClick","onSubmit","htmlFor","id","onChange","placeholder","required","rows","type","checked","disabled"],"sourceRoot":""}