{"version":3,"file":"static/js/364.3083434f.chunk.js","mappings":"oMAIA,MA6FA,EA7FsBA,KAClB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC7B,MAAES,IAAUC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,MA6CjB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,UACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+BAGNV,IAAWQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAAEV,IAC7CE,IAASM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAER,KAE1CS,EAAAA,EAAAA,MAAA,QAAMC,SAtDGC,UAKjB,GAJAC,EAAEC,iBACFZ,EAAS,IACTF,EAAW,IAEPR,IAAaG,EAKjB,GAAIH,EAASuB,OAAS,EAClBb,EAAS,mDADb,CAKAJ,GAAa,GAEb,IACI,MAAMkB,QAAiBC,MAAM,kDAAkDd,IAAS,CACpFe,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAE9B,eAGrB+B,QAAaP,EAASQ,OAE5B,IAAKR,EAASS,GACV,MAAM,IAAIC,MAAMH,EAAKxB,SAAW,4BAGpCC,EAAW,wCACX2B,YAAW,KACPtB,EAAS,SAAS,GACnB,IACP,CAAE,MAAOuB,GACL1B,EAAS0B,EAAI7B,SAAW,uCAC5B,CAAC,QACGD,GAAa,EACjB,CA3BA,MAPII,EAAS,yBAkCb,EAcqCO,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBF,EAAAA,EAAAA,KAAA,SACIsB,KAAK,WACLC,MAAOtC,EACPuC,SAAWlB,GAAMpB,EAAYoB,EAAEmB,OAAOF,OACtCG,YAAY,eACZC,UAAQ,OAIhB3B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBF,EAAAA,EAAAA,KAAA,SACIsB,KAAK,WACLC,MAAOnC,EACPoC,SAAWlB,GAAMjB,EAAmBiB,EAAEmB,OAAOF,OAC7CG,YAAY,uBACZC,UAAQ,OAIhB3B,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAASrB,UAAU,YAAY2B,SAAUtC,EAAUY,SAC3DZ,EAAY,eAAiB,0BAIxC,C","sources":["pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../styles/ResetPassword.css';\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const { token } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setMessage('');\r\n\r\n        if (password !== confirmPassword) {\r\n            setError('Passwords do not match');\r\n            return;\r\n        }\r\n\r\n        if (password.length < 8) {\r\n            setError('Password must be at least 8 characters long');\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/users/reset-password/${token}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Failed to reset password');\r\n            }\r\n\r\n            setMessage('Password has been reset successfully');\r\n            setTimeout(() => {\r\n                navigate('/login');\r\n            }, 2000);\r\n        } catch (err) {\r\n            setError(err.message || 'An error occurred. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-container\">\r\n            <div className=\"reset-password-card\">\r\n                <div className=\"reset-password-header\">\r\n                    <h1>Reset Password</h1>\r\n                    <p>Enter your new password</p>\r\n                </div>\r\n\r\n                {message && <div className=\"success-message\">{message}</div>}\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            placeholder=\"New Password\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            placeholder=\"Confirm New Password\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"reset-btn\" disabled={isLoading}>\r\n                        {isLoading ? 'Resetting...' : 'Reset Password'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword; "],"names":["ResetPassword","password","setPassword","useState","confirmPassword","setConfirmPassword","isLoading","setIsLoading","message","setMessage","error","setError","token","useParams","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","length","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","setTimeout","err","type","value","onChange","target","placeholder","required","disabled"],"sourceRoot":""}