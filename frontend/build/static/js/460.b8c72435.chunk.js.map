{"version":3,"file":"static/js/460.b8c72435.chunk.js","mappings":"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","sources":["pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../styles/Login.css';\n\nconst Login = () => {\n    const [activeTab, setActiveTab] = useState('user');\n    const [formData, setFormData] = useState({ email: '', password: '' });\n    const [errors, setErrors] = useState({});\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const validateForm = () => {\n        const newErrors = {};\n\n        // Email validation\n        if (!formData.email) {\n            newErrors.email = 'Email is required';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n            newErrors.email = 'Please enter a valid email address';\n        }\n\n        // Password validation\n        if (!formData.password) {\n            newErrors.password = 'Password is required';\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleTabClick = (tab) => {\n        setActiveTab(tab);\n        setErrors({});\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n        // Clear error when user starts typing\n        if (errors[name]) {\n            setErrors(prev => ({ ...prev, [name]: '' }));\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!validateForm()) {\n            return;\n        }\n\n        setLoading(true);\n        setErrors({});\n\n        try {\n            const endpoint = activeTab === 'user' ? '/api/users/login' : '/api/shops/login';\n            const response = await fetch(`http://localhost:5000${endpoint}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    email: formData.email,\n                    password: formData.password\n                }),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Login failed');\n            }\n\n            // Store token and user info in localStorage\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('user', JSON.stringify(data.user || data.shop));\n            localStorage.setItem('userType', activeTab);\n\n            // Redirect based on user type\n            if (activeTab === 'user') {\n                navigate('/user-dashboard');\n            } else {\n                navigate('/shop-dashboard');\n            }\n        } catch (err) {\n            setErrors({ submit: err.message || 'Login failed. Please try again.' });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"login-card\">\n                <div className=\"form-section\">\n                    <div className=\"logo\">ðŸŒ¿ Virtual Greenhouse</div>\n\n                    <div className=\"tabs\">\n                        <button\n                            className={`tab ${activeTab === 'user' ? 'active' : ''}`}\n                            onClick={() => handleTabClick('user')}\n                        >\n                            User\n                        </button>\n                        <button\n                            className={`tab ${activeTab === 'shop' ? 'active' : ''}`}\n                            onClick={() => handleTabClick('shop')}\n                        >\n                            Shop\n                        </button>\n                    </div>\n\n                    {errors.submit && <div className=\"error-message\">{errors.submit}</div>}\n\n                    {/* User Form */}\n                    <form id=\"userForm\" className={`login-form ${activeTab === 'user' ? 'active' : ''}`} onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={formData.email}\n                                onChange={handleChange}\n                                placeholder=\"Enter your email\"\n                                className={errors.email ? 'error' : ''}\n                                required\n                            />\n                            {errors.email && <span className=\"error-text\">{errors.email}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password\"\n                                name=\"password\"\n                                value={formData.password}\n                                onChange={handleChange}\n                                placeholder=\"Enter your password\"\n                                className={errors.password ? 'error' : ''}\n                                required\n                            />\n                            {errors.password && <span className=\"error-text\">{errors.password}</span>}\n                        </div>\n\n                        <div className=\"options\">\n                            <label className=\"remember\">\n                                <input type=\"checkbox\" /> Remember me\n                            </label>\n                            <div className=\"forgot-password-link\">\n                                <Link to=\"/forgot-password\">Forgot Password?</Link>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"login-btn\" disabled={loading}>\n                            {loading ? 'Logging in...' : 'Login as User'}\n                        </button>\n                    </form>\n\n                    {/* Shop Form */}\n                    <form id=\"shopForm\" className={`login-form ${activeTab === 'shop' ? 'active' : ''}`} onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"shop-email\">Shop Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"shop-email\"\n                                name=\"email\"\n                                value={formData.email}\n                                onChange={handleChange}\n                                placeholder=\"Enter your shop email\"\n                                className={errors.email ? 'error' : ''}\n                                required\n                            />\n                            {errors.email && <span className=\"error-text\">{errors.email}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"shop-password\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"shop-password\"\n                                name=\"password\"\n                                value={formData.password}\n                                onChange={handleChange}\n                                placeholder=\"Enter your password\"\n                                className={errors.password ? 'error' : ''}\n                                required\n                            />\n                            {errors.password && <span className=\"error-text\">{errors.password}</span>}\n                        </div>\n\n                        <div className=\"options\">\n                            <label className=\"remember\">\n                                <input type=\"checkbox\" /> Remember me\n                            </label>\n                            <div className=\"forgot-password-link\">\n                                <Link to=\"/forgot-password\">Forgot Password?</Link>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"login-btn\" disabled={loading}>\n                            {loading ? 'Logging in...' : 'Login as Shop'}\n                        </button>\n                    </form>\n\n                    <div className=\"register\">\n                        Don't have an account? <Link to=\"/register/user\">Register here</Link>\n                    </div>\n                </div>\n\n                <div className=\"image-section\">\n                    <img src=\"/assets/login.jpg\" alt=\"Greenhouse\" />\n                </div>\n            </div>\n\n            <div className=\"footer\">\n                <a href=\"/terms\">Terms of Service</a> â€¢ <a href=\"/privacy\">Privacy Policy</a>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"names":["Login","activeTab","setActiveTab","useState","formData","setFormData","email","password","errors","setErrors","loading","setLoading","navigate","useNavigate","handleTabClick","tab","handleChange","e","name","value","target","prev","handleSubmit","async","preventDefault","validateForm","newErrors","test","Object","keys","length","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","localStorage","setItem","token","user","shop","err","submit","_jsxs","className","children","_jsx","onClick","id","onSubmit","htmlFor","type","onChange","placeholder","required","Link","to","disabled","src","alt","href"],"sourceRoot":""}