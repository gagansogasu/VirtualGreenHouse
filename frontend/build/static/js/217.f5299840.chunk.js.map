{"version":3,"file":"static/js/217.f5299840.chunk.js","mappings":"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","sources":["pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { userAPI, orderAPI } from '../services/api';\nimport '../styles/Profile.css';\n\nconst Profile = () => {\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: ''\n  });\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const fetchUserData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const userResponse = await userAPI.getProfile();\n      setUserData(userResponse.data);\n      setFormData({\n        name: userResponse.data.name || '',\n        email: userResponse.data.email || '',\n        phone: userResponse.data.phone || '',\n        address: userResponse.data.address || ''\n      });\n\n      try {\n        const ordersResponse = await orderAPI.getOrders();\n        setOrders(ordersResponse.data);\n      } catch (orderError) {\n        console.error('Error fetching orders:', orderError);\n        setOrders([]);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      setError('Failed to load profile data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchUserData();\n  }, [fetchUserData]);\n\n  const handleInputChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }, []);\n\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await userAPI.updateProfile(formData);\n      setUserData(response.data);\n      setEditMode(false);\n      alert('Profile updated successfully!');\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      setError(error.response?.data?.message || 'An error occurred while updating your profile');\n      alert(error.response?.data?.message || 'An error occurred while updating your profile');\n    } finally {\n      setLoading(false);\n    }\n  }, [formData]);\n\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('userType');\n    window.location.href = '/login';\n  }, []);\n\n  const handleToggleEditMode = useCallback(() => {\n    setEditMode(prevMode => !prevMode);\n    if (editMode && userData) {\n      setFormData({\n        name: userData.name || '',\n        email: userData.email || '',\n        phone: userData.phone || '',\n        address: userData.address || ''\n      });\n    }\n  }, [editMode, userData]);\n\n  if (loading && !userData) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner\"></div>\n        <p>Loading profile...</p>\n      </div>\n    );\n  }\n\n  if (error && !userData) {\n    return (\n      <div className=\"error-container\">\n        <h2>Error Loading Profile</h2>\n        <p>{error}</p>\n        <button onClick={fetchUserData} className=\"retry-button\">\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (!loading && !userData) {\n    return (\n      <div className=\"error-container\">\n        <h2>Profile Not Found</h2>\n        <p>Could not load your profile information.</p>\n        <Link to=\"/user-dashboard\" className=\"retry-button\">Go to Dashboard</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"profile-page\">\n      <header className=\"profile-header\">\n        <Link to=\"/user-dashboard\" className=\"logo\">VirtualGreen</Link>\n        <nav className=\"profile-nav\">\n          <Link to=\"/user-dashboard\">Home</Link>\n          <Link to=\"/shops\">Shops</Link>\n          <Link to=\"/cart\">Cart</Link>\n          <Link to=\"/profile\" className=\"active\">Profile</Link>\n        </nav>\n        <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n      </header>\n\n      <div className=\"profile-container\">\n        <div className=\"profile-sidebar\">\n          <div className=\"profile-avatar\">\n            <img src={userData?.avatarUrl || \"/assets/default-avatar.jpg\"} alt=\"Profile\" />\n            <h2>{userData?.name || 'User'}</h2>\n            <p>{userData?.email}</p>\n          </div>\n          <ul className=\"profile-menu\">\n            <li className=\"active\">Profile Information</li>\n            <li><Link to=\"/orders\">Order History</Link></li>\n          </ul>\n        </div>\n\n        <div className=\"profile-content\">\n          <div className=\"profile-section\">\n            <div className=\"section-header\">\n              <h2>Profile Information</h2>\n              <button\n                className=\"edit-btn\"\n                onClick={handleToggleEditMode}\n              >\n                {editMode ? 'Cancel' : 'Edit Profile'}\n              </button>\n            </div>\n\n            {editMode ? (\n              <form className=\"profile-form\" onSubmit={handleSubmit}>\n                {error && !loading && <p className=\"error-message\">{error}</p>}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Full Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"phone\">Phone</label>\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"address\">Address</label>\n                  <textarea\n                    id=\"address\"\n                    name=\"address\"\n                    value={formData.address}\n                    onChange={handleInputChange}\n                    rows=\"3\"\n                  ></textarea>\n                </div>\n                <button type=\"submit\" className=\"save-btn\" disabled={loading}>\n                  {loading ? 'Saving...' : 'Save Changes'}\n                </button>\n              </form>\n            ) : (\n              <div className=\"profile-info\">\n                <div className=\"info-group\">\n                  <span className=\"info-label\">Full Name:</span>\n                  <span className=\"info-value\">{userData?.name || 'Not provided'}</span>\n                </div>\n                <div className=\"info-group\">\n                  <span className=\"info-label\">Email:</span>\n                  <span className=\"info-value\">{userData?.email || 'Not provided'}</span>\n                </div>\n                <div className=\"info-group\">\n                  <span className=\"info-label\">Phone:</span>\n                  <span className=\"info-value\">{userData?.phone || 'Not provided'}</span>\n                </div>\n                <div className=\"info-group\">\n                  <span className=\"info-label\">Address:</span>\n                  <span className=\"info-value\">{userData?.address || 'Not provided'}</span>\n                </div>\n                <div className=\"info-group\">\n                  <span className=\"info-label\">Member Since:</span>\n                  <span className=\"info-value\">\n                    {userData?.createdAt ? new Date(userData.createdAt).toLocaleDateString() : 'Unknown'}\n                  </span>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"profile-section\">\n            <div className=\"section-header\">\n              <h2>Recent Orders</h2>\n              <Link to=\"/orders\" className=\"view-all-link\">View All</Link>\n            </div>\n            <div className=\"orders-list\">\n              {loading && <p>Loading orders...</p>}\n              {!loading && error && <p className=\"error-message\">{error}</p>}\n              {!loading && orders.length === 0 && !error && <p>You have no recent orders.</p>}\n              {orders.length > 0 && (\n                <div className=\"orders-list\">\n                  {orders.slice(0, 3).map(order => (\n                    <div className=\"order-card\" key={order._id}>\n                      <div className=\"order-header\">\n                        <Link to={`/orders/${order._id}`} className=\"order-id\">Order #{order._id.substring(0, 8)}</Link>\n                        <span className=\"order-date\">{new Date(order.orderDate).toLocaleDateString()}</span>\n                        <span className={`order-status ${order.status.toLowerCase().replace(/ /g, '-')}`}>{order.status}</span>\n                      </div>\n                      <div className=\"order-items\">\n                        {order.items.map((item, index) => (\n                          <div key={index} className=\"order-item\">\n                            <img src={item.plant?.imageUrl || item.image || '/assets/plant-placeholder.jpg'} alt={item.plant?.name || item.name} />\n                            <div className=\"item-details\">\n                              <span className=\"item-name\">{item.plant?.name || item.name}</span>\n                              <span className=\"item-price\">₹{(item.price * item.quantity).toFixed(2)} x {item.quantity}</span>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                      <div className=\"order-footer\">\n                        <span className=\"order-total\">Total: ₹{(order.totalAmount || 0).toFixed(2)}</span>\n                        <Link to={`/orders/${order._id}`} className=\"view-order-details\">View Details</Link>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;"],"names":["Profile","userData","setUserData","useState","loading","setLoading","editMode","setEditMode","formData","setFormData","name","email","phone","address","orders","setOrders","error","setError","fetchUserData","useNavigate","useCallback","async","userResponse","userAPI","getProfile","data","ordersResponse","orderAPI","getOrders","orderError","console","useEffect","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","response","updateProfile","alert","_error$response","_error$response$data","_error$response2","_error$response2$data","message","handleLogout","localStorage","removeItem","window","location","href","handleToggleEditMode","prevMode","_jsxs","className","children","_jsx","onClick","Link","to","src","avatarUrl","alt","onSubmit","htmlFor","type","id","onChange","required","rows","disabled","createdAt","Date","toLocaleDateString","length","slice","map","order","_id","substring","orderDate","status","toLowerCase","replace","items","item","index","_item$plant","_item$plant2","_item$plant3","plant","imageUrl","image","price","quantity","toFixed","totalAmount"],"sourceRoot":""}