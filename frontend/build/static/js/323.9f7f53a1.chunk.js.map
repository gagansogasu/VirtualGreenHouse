{"version":3,"file":"static/js/323.9f7f53a1.chunk.js","mappings":"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","sources":["pages/UserRegister.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../styles/UserRegister.css';\n\nconst UserRegister = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        password: '',\n        confirmPassword: '',\n        terms: false\n    });\n\n    const [errors, setErrors] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [success, setSuccess] = useState('');\n    const navigate = useNavigate();\n\n    const validateForm = () => {\n        const newErrors = {};\n\n        // Name validation\n        if (!formData.name.trim()) {\n            newErrors.name = 'Full name is required';\n        } else if (formData.name.trim().length < 2) {\n            newErrors.name = 'Name must be at least 2 characters long';\n        }\n\n        // Email validation\n        if (!formData.email.trim()) {\n            newErrors.email = 'Email is required';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n            newErrors.email = 'Please enter a valid email address';\n        }\n\n        // Phone validation\n        if (!formData.phone.trim()) {\n            newErrors.phone = 'Phone number is required';\n        } else if (!/^\\d{10,}$/.test(formData.phone.replace(/\\D/g, ''))) {\n            newErrors.phone = 'Please enter a valid phone number (minimum 10 digits)';\n        }\n\n        // Address validation\n        if (!formData.address.trim()) {\n            newErrors.address = 'Address is required';\n        } else if (formData.address.trim().length < 5) {\n            newErrors.address = 'Please enter a valid address';\n        }\n\n        // Password validation\n        if (!formData.password) {\n            newErrors.password = 'Password is required';\n        } else if (formData.password.length < 8) {\n            newErrors.password = 'Password must be at least 8 characters long';\n        } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password)) {\n            newErrors.password = 'Password must contain at least one uppercase letter, one lowercase letter, and one number';\n        }\n\n        // Confirm password validation\n        if (!formData.confirmPassword) {\n            newErrors.confirmPassword = 'Please confirm your password';\n        } else if (formData.password !== formData.confirmPassword) {\n            newErrors.confirmPassword = 'Passwords do not match';\n        }\n\n        // Terms validation\n        if (!formData.terms) {\n            newErrors.terms = 'You must accept the terms and conditions';\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: type === 'checkbox' ? checked : value\n        }));\n        // Clear error when user starts typing\n        if (errors[name]) {\n            setErrors(prev => ({ ...prev, [name]: '' }));\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!validateForm()) {\n            return;\n        }\n\n        setIsLoading(true);\n        setErrors({});\n\n        try {\n            // Prepare data for API\n            const userData = {\n                name: formData.name,\n                email: formData.email,\n                password: formData.password,\n                phone: formData.phone,\n                address: formData.address\n            };\n\n            // Send registration request to backend\n            const response = await fetch('http://localhost:5000/api/users/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userData),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Registration failed');\n            }\n\n            // Store token and user info\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('user', JSON.stringify(data.user));\n            localStorage.setItem('userType', 'user');\n\n            setSuccess('Registration successful! Redirecting to dashboard...');\n\n            // Redirect after a short delay\n            setTimeout(() => {\n                navigate('/user-dashboard');\n            }, 1500);\n\n        } catch (error) {\n            console.error('Registration error:', error);\n            setErrors({ submit: error.message || 'Registration failed. Please try again.' });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"register-container\">\n            <div className=\"register-card\">\n                <div className=\"center-section\">\n                    <img src=\"/assets/user_register.jpg\" alt=\"Registration\" />\n                </div>\n                <div className=\"right-section\">\n                    <div className=\"register-header\">\n                        <h1>Create Account</h1>\n                        <p>Join our community of plant lovers</p>\n                    </div>\n\n                    <div className=\"tabs\">\n                        <button className=\"tab active\">Register as User</button>\n                        <Link to=\"/register/shop\" className=\"tab\">Register as Shop</Link>\n                    </div>\n\n                    {success && (\n                        <div className=\"success-message\">\n                            {success}\n                        </div>\n                    )}\n\n                    {errors.submit && (\n                        <div className=\"error-message\">\n                            {errors.submit}\n                        </div>\n                    )}\n\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Full Name</label>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={formData.name}\n                                onChange={handleChange}\n                                placeholder=\"Enter your full name\"\n                                className={errors.name ? 'error' : ''}\n                            />\n                            {errors.name && <span className=\"error-text\">{errors.name}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={formData.email}\n                                onChange={handleChange}\n                                placeholder=\"Enter your email\"\n                                className={errors.email ? 'error' : ''}\n                            />\n                            {errors.email && <span className=\"error-text\">{errors.email}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone\">Phone Number</label>\n                            <input\n                                type=\"tel\"\n                                id=\"phone\"\n                                name=\"phone\"\n                                value={formData.phone}\n                                onChange={handleChange}\n                                placeholder=\"Enter your phone number\"\n                                className={errors.phone ? 'error' : ''}\n                            />\n                            {errors.phone && <span className=\"error-text\">{errors.phone}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address\"\n                                name=\"address\"\n                                value={formData.address}\n                                onChange={handleChange}\n                                placeholder=\"Enter your address\"\n                                className={errors.address ? 'error' : ''}\n                            />\n                            {errors.address && <span className=\"error-text\">{errors.address}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password\"\n                                name=\"password\"\n                                value={formData.password}\n                                onChange={handleChange}\n                                placeholder=\"Create a password\"\n                                className={errors.password ? 'error' : ''}\n                            />\n                            {errors.password && <span className=\"error-text\">{errors.password}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                name=\"confirmPassword\"\n                                value={formData.confirmPassword}\n                                onChange={handleChange}\n                                placeholder=\"Confirm your password\"\n                                className={errors.confirmPassword ? 'error' : ''}\n                            />\n                            {errors.confirmPassword && <span className=\"error-text\">{errors.confirmPassword}</span>}\n                        </div>\n\n                        <div className=\"checkbox\">\n                            <input\n                                type=\"checkbox\"\n                                id=\"terms\"\n                                name=\"terms\"\n                                checked={formData.terms}\n                                onChange={handleChange}\n                                className={errors.terms ? 'error' : ''}\n                            />\n                            <label htmlFor=\"terms\">\n                                I accept the <Link to=\"/terms\">Terms & Conditions</Link>\n                            </label>\n                            {errors.terms && <span className=\"error-text\">{errors.terms}</span>}\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"register-btn\"\n                            disabled={isLoading}\n                        >\n                            {isLoading ? 'Registering...' : 'Create Account'}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserRegister;"],"names":["UserRegister","formData","setFormData","useState","name","email","phone","address","password","confirmPassword","terms","errors","setErrors","isLoading","setIsLoading","success","setSuccess","navigate","useNavigate","handleChange","e","value","type","checked","target","prev","_jsx","className","children","_jsxs","src","alt","Link","to","submit","onSubmit","async","preventDefault","validateForm","newErrors","trim","length","test","replace","Object","keys","userData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","localStorage","setItem","token","user","setTimeout","error","console","htmlFor","id","onChange","placeholder","disabled"],"sourceRoot":""}